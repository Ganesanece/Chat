{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganes\\\\Downloads\\\\react-dialogflow-chatbot\\\\src\\\\Message.js\";\nimport React from \"react\";\nconst Message = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, message.isBot ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"botCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: \"16px\",\n      paddingRight: \"10px\",\n      fontFamily: \"Montserrat\",\n      paddingTop: \"7.5px\",\n      paddingBottom: \"7.5px\",\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, message.text)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: \"16px\",\n      paddingRight: \"10px\",\n      fontFamily: \"Montserrat\",\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, message.text)));\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","Message","_ref","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isBot","style","paddingLeft","paddingRight","fontFamily","paddingTop","paddingBottom","fontWeight","text","_c","$RefreshReg$"],"sources":["C:/Users/ganes/Downloads/react-dialogflow-chatbot/src/Message.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Message = ({ message }) => {\r\n  return (\r\n    <div className=\"messageCard\">\r\n      {message.isBot ? (\r\n        <div className=\"botCard\">\r\n          <p\r\n            style={{\r\n              paddingLeft: \"16px\",\r\n              paddingRight: \"10px\",\r\n              fontFamily: \"Montserrat\",\r\n              paddingTop: \"7.5px\",\r\n              paddingBottom: \"7.5px\",\r\n              fontWeight: 700\r\n            }}\r\n          >\r\n            {message.text}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"userCard\">\r\n          <p\r\n            style={{\r\n              paddingLeft: \"16px\",\r\n              paddingRight: \"10px\",\r\n              fontFamily: \"Montserrat\",\r\n              fontWeight: 700\r\n            }}\r\n          >\r\n            {message.text}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,IAAA,IAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAC1B,oBACEF,KAAA,CAAAI,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzBR,OAAO,CAACS,KAAK,gBACZZ,KAAA,CAAAI,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBX,KAAA,CAAAI,aAAA;IACES,KAAK,EAAE;MACLC,WAAW,EAAE,MAAM;MACnBC,YAAY,EAAE,MAAM;MACpBC,UAAU,EAAE,YAAY;MACxBC,UAAU,EAAE,OAAO;MACnBC,aAAa,EAAE,OAAO;MACtBC,UAAU,EAAE;IACd,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDR,OAAO,CAACiB,IACR,CACA,CAAC,gBAENpB,KAAA,CAAAI,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBX,KAAA,CAAAI,aAAA;IACES,KAAK,EAAE;MACLC,WAAW,EAAE,MAAM;MACnBC,YAAY,EAAE,MAAM;MACpBC,UAAU,EAAE,YAAY;MACxBG,UAAU,EAAE;IACd,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDR,OAAO,CAACiB,IACR,CACA,CAEJ,CAAC;AAEV,CAAC;AAACC,EAAA,GAlCIpB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}